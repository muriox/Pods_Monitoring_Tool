# Generated by Django 2.0.4 on 2019-07-07 01:32

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActiveClustersAndDevices',
            fields=[
                ('active_cluster_and_device_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('last_modified_user', models.CharField(max_length=80)),
                ('last_updated_datetime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'ActiveClustersAndDevices',
            },
        ),
        migrations.CreateModel(
            name='Areas',
            fields=[
                ('area_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('area_name', models.CharField(max_length=100)),
                ('last_modified_user', models.CharField(max_length=80)),
                ('last_updated_datetime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Areas',
            },
        ),
        migrations.CreateModel(
            name='Cities',
            fields=[
                ('city_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('city_name', models.CharField(max_length=100)),
                ('last_modified_user', models.CharField(max_length=80)),
                ('last_updated_datetime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='ClientsLogin',
            fields=[
                ('client_login_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('login_password', models.CharField(max_length=128)),
                ('last_modified_user', models.CharField(max_length=80)),
                ('last_updated_datetime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'ClientsLogin',
            },
        ),
        migrations.CreateModel(
            name='ClientsProfile',
            fields=[
                ('client_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('client_name', models.CharField(max_length=100)),
                ('client_tel', models.CharField(max_length=12)),
                ('client_email', models.EmailField(max_length=100)),
                ('client_address', models.CharField(max_length=100)),
                ('contact_person', models.CharField(max_length=50)),
                ('last_modified_user', models.CharField(max_length=80)),
                ('last_updated_datetime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'ClientsProfile',
            },
        ),
        migrations.CreateModel(
            name='ClustersNetworkConfiguration',
            fields=[
                ('clusters_network_config_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cluster_network_provider', models.CharField(max_length=50)),
                ('cluster_network_pass', models.CharField(max_length=128)),
                ('last_modified_user', models.CharField(max_length=80)),
                ('last_updated_datetime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'ClustersNetworkConfiguration',
            },
        ),
        migrations.CreateModel(
            name='ClustersSetup',
            fields=[
                ('cluster_setup_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cluster_location_detail', models.CharField(max_length=80)),
                ('cluster_exposure', models.CharField(max_length=8)),
                ('cluster_status', models.CharField(max_length=50)),
                ('last_modified_user', models.CharField(max_length=80)),
                ('last_updated_datetime', models.DateTimeField(auto_now=True)),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='monitoringTool.Areas')),
            ],
            options={
                'verbose_name_plural': 'ClustersSetup',
            },
        ),
        migrations.CreateModel(
            name='ClustersWeatherCondition',
            fields=[
                ('clusters_weather_condition_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('latitude', models.CharField(max_length=100)),
                ('longitude', models.CharField(max_length=100)),
                ('cluster_json_data', models.CharField(max_length=128, null=True)),
                ('last_modified_user', models.CharField(max_length=80)),
                ('last_updated_datetime', models.DateTimeField(auto_now=True)),
                ('cluster_setup', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='monitoringTool.ClustersSetup')),
            ],
            options={
                'verbose_name_plural': 'ClustersWeatherCondition',
            },
        ),
        migrations.CreateModel(
            name='ClusterTypes',
            fields=[
                ('cluster_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cluster_location_type', models.CharField(max_length=50)),
                ('last_modified_user', models.CharField(max_length=80)),
                ('last_updated_datetime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'ClusterTypes',
            },
        ),
        migrations.CreateModel(
            name='ContentContracts',
            fields=[
                ('content_contract_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content_contract_data', models.FileField(max_length=128, upload_to='')),
                ('fee_paid', models.DecimalField(decimal_places=2, max_digits=13)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('last_modified_user', models.CharField(max_length=80)),
                ('last_updated_datetime', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='monitoringTool.ClientsProfile')),
            ],
            options={
                'verbose_name_plural': 'ContentContracts',
            },
        ),
        migrations.CreateModel(
            name='ContentsData',
            fields=[
                ('content_data_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content_data', models.FileField(upload_to='contentsData/', verbose_name='')),
                ('last_modified_user', models.CharField(max_length=80)),
                ('last_updated_datetime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'ContentsData',
            },
        ),
        migrations.CreateModel(
            name='ContentsSetup',
            fields=[
                ('content_setup_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content_title', models.CharField(max_length=128)),
                ('is_content_new', models.CharField(max_length=4)),
                ('last_modified_user', models.CharField(max_length=80)),
                ('last_updated_datetime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'ContentsSetup',
            },
        ),
        migrations.CreateModel(
            name='ContentTypes',
            fields=[
                ('content_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content_type_name', models.CharField(max_length=50)),
                ('last_modified_user', models.CharField(max_length=80)),
                ('last_updated_datetime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'ContentTypes',
            },
        ),
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('country_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('country_name', models.CharField(max_length=80)),
                ('continent', models.CharField(max_length=80)),
                ('last_modified_user', models.CharField(max_length=80)),
                ('last_updated_datetime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='Devices',
            fields=[
                ('device_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('device_mac_address', models.CharField(max_length=50)),
                ('device_status', models.CharField(max_length=50)),
                ('last_modified_user', models.CharField(max_length=80)),
                ('last_updated_datetime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Devices',
            },
        ),
        migrations.CreateModel(
            name='DevicesConfiguration',
            fields=[
                ('device_config_id', models.AutoField(primary_key=True, serialize=False)),
                ('manufactured_year', models.DateField()),
                ('extra_info', models.CharField(max_length=100)),
                ('last_modified_user', models.CharField(max_length=80)),
                ('last_updated_datetime', models.DateTimeField(auto_now=True)),
                ('device', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='monitoringTool.Devices')),
            ],
            options={
                'verbose_name_plural': 'DevicesConfiguration',
            },
        ),
        migrations.CreateModel(
            name='EmployeesProfile',
            fields=[
                ('employee_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('employee_lname', models.CharField(max_length=100)),
                ('employee_fname', models.CharField(max_length=100)),
                ('employee_tel', models.CharField(max_length=12)),
                ('employee_oemail', models.EmailField(max_length=100)),
                ('employee_pemail', models.EmailField(max_length=100)),
                ('employee_Address', models.CharField(max_length=100)),
                ('personal_tel', models.CharField(max_length=12)),
                ('last_modified_user', models.CharField(max_length=80)),
                ('last_updated_datetime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'EmployeesProfile',
            },
        ),
        migrations.CreateModel(
            name='StaffLogin',
            fields=[
                ('staff_login_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('login_password', models.CharField(max_length=128)),
                ('last_modified_user', models.CharField(max_length=80)),
                ('last_updated_datetime', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='monitoringTool.EmployeesProfile')),
            ],
            options={
                'verbose_name_plural': 'StaffLogin',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('test_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('content_title', models.CharField(max_length=128)),
                ('content_data', models.FileField(null=True, upload_to='contentsData/', verbose_name='')),
            ],
        ),
        migrations.AddField(
            model_name='contentssetup',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='monitoringTool.ContentTypes'),
        ),
        migrations.AddField(
            model_name='contentsdata',
            name='content_setup',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='monitoringTool.ContentsSetup'),
        ),
        migrations.AddField(
            model_name='contentcontracts',
            name='content_setup',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='monitoringTool.ContentsSetup'),
        ),
        migrations.AddField(
            model_name='contentcontracts',
            name='our_representative',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitoringTool.EmployeesProfile'),
        ),
        migrations.AddField(
            model_name='clusterssetup',
            name='cluster_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='monitoringTool.ClusterTypes'),
        ),
        migrations.AddField(
            model_name='clustersnetworkconfiguration',
            name='cluster_setup',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='monitoringTool.ClustersSetup'),
        ),
        migrations.AddField(
            model_name='clientslogin',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='monitoringTool.ClientsProfile'),
        ),
        migrations.AddField(
            model_name='cities',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='monitoringTool.Countries'),
        ),
        migrations.AddField(
            model_name='areas',
            name='city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='monitoringTool.Cities'),
        ),
        migrations.AddField(
            model_name='activeclustersanddevices',
            name='cluster_setup',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='monitoringTool.ClustersSetup'),
        ),
        migrations.AddField(
            model_name='activeclustersanddevices',
            name='content_setup',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='monitoringTool.ContentsSetup'),
        ),
        migrations.AddField(
            model_name='activeclustersanddevices',
            name='device',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='monitoringTool.Devices'),
        ),
    ]
